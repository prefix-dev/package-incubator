--- a/src/Renode/Program.cs	2025-01-30 11:54:45.389351518 -0600
+++ b/src/Renode/Program.cs	2025-01-30 11:34:18.393137972 -0600
@@ -11,2 +11,3 @@
 using System.IO;
+using System.Runtime.InteropServices;
 using System;
@@ -45,2 +45,32 @@
             */
+
+            // Load dynamic libraries
+            var libraryDirectory = Environment.GetEnvironmentVariable("RENODE_CORES_PATH") ?? "../src/Infrastructure/src/Emulator/Cores/bin/Release/lib";
+            var libraryFiles = Directory.GetFiles(libraryDirectory, "translate-*.so");
+            var libraries = new string[]
+            {
+                "translate-arm-be.so",
+                "translate-arm-le.so",
+                "translate-arm-m-be.so",
+                "translate-arm-m-le.so",
+                "translate-arm64-le.so",
+                "translate-i386-le.so",
+                "translate-ppc-be.so",
+                "translate-ppc-le.so",
+                "translate-ppc64-be.so",
+                "translate-ppc64-le.so",
+                "translate-riscv-le.so",
+                "translate-riscv64-le.so",
+                "translate-sparc-be.so",
+                "translate-sparc-le.so",
+                "translate-x86_64-le.so",
+                "translate-xtensa-le.so",
+            };
+
+            var loader = new DynamicLibraryLoader(libraryDirectory);
+            foreach (var library in libraries)
+            {
+                loader.LoadLibrary(library);
+            }
+
             Core.EmulationManager.RebuildInstance();
@@ -132,2 +162,5 @@
         }
+
+        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
+        private delegate int FunctionDelegate(int a, int b);
     }
